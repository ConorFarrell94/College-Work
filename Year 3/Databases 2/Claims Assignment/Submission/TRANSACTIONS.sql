-- MINUS - SHOW ALL CLAIM KEYS THAT DONT MATCH THE SAME STAFF KEY
SELECT STAFFTOCLAIM.CLAIM_CL_KEY FROM STAFFTOCLAIM
MINUS 
SELECT STAFFTOCLAIM.STAFF_STAFF_NO FROM STAFFTOCLAIM;

-- INTERSECT - SHOW ACCIDENT LOCATIONS THAT MATCH CLAIMANT ADDRESSES
SELECT ACCIDENT.A_LOCATION FROM ACCIDENT
INTERSECT
SELECT CLAIMANT.CL_ADDR FROM CLAIMANT;

-- UNION - SHOW ALL COMPANY STAFF AND EXPERTS
SELECT STAFF.STAFF_NAME FROM STAFF
UNION
SELECT EXPERTS.E_NAME FROM EXPERTS;

-- INNER JOIN - SHOW ACCIDENT LOCATIONS THAT HAPPENED AT THE CLAIMANTS HOME ADDRESS
SELECT ACCIDENT.A_LOCATION FROM ACCIDENT
INNER JOIN CLAIMANT ON ACCIDENT.A_LOCATION = CLAIMANT.CL_ADDR;

-- LEFT JOIN
SELECT ACCIDENT.A_LOCATION FROM ACCIDENT
LEFT JOIN CLAIMANT ON ACCIDENT.A_LOCATION = CLAIMANT.CL_ADDR;

-- FULL JOIN
SELECT * FROM CLAIM
FULL JOIN CLAIMANT ON claimant.claimant_id = CLAIM.cl_key;

-- AGGREGATION
SELECT COUNT(DISTINCT CL_ADDR)
FROM CLAIMANT;

-- THIS SHOULD SHOW US ONLY PAYMENT NUMBER 1
SELECT COUNT(PAYMENT_NO), P_AMOUNT
FROM PAYMENTS
GROUP BY P_AMOUNT
HAVING COUNT(PAYMENT_NO) < 2;

-- CORRELATED SUBQUERIES
-- SELECT ANY CLAIMANTS THAT LIVE IN A LOCATION WHERE A ACCIDENT HASNT ALREADY TAKEN PLACE
SELECT CL_NAME, CL_DOB
FROM CLAIMANT
WHERE NOT EXISTS(SELECT *
FROM ACCIDENT
WHERE ACCIDENT.A_LOCATION = CLAIMANT.CL_ADDR);

-- PROGRAMMED TRANSACTION
SELECT CL_DOB FROM CLAIMANT 
WHERE CLAIMANT_ID = 4;
UPDATE CLAIMANT
SET CL_DOB = '12/DECEMBER/1990'
WHERE CLAIMANT_ID = 4;
SELECT CL_DOB FROM CLAIMANT 
WHERE CLAIMANT_ID = 4;

COMMIT;

